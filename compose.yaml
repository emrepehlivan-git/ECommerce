services:
  ecommerce.webapi:
    container_name: ecommerce.webapi
    build:
      context: .
      dockerfile: src/Presentation/ECommerce.WebAPI/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=ecommerce.db;Database=ecommerce;Username=postgres;Password=postgres
      - ConnectionStrings__Redis=ecommerce.redis:6379
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - Serilog__WriteTo__1__Args__serverUrl=http://ecommerce.seq:5341
      - Authentication__Authority=https://ecommerce.authserver:8081
      - Authentication__SwaggerAuthority=https://localhost:5002
      - Authentication__Audience=api
      - Authentication__ClientId=api
      - Authentication__ClientSecret=api-secret
      - DOTNET_RUNNING_IN_CONTAINER=true
      - OpenTelemetry__ServiceName=ECommerce.WebAPI
      - OpenTelemetry__ServiceVersion=1.0.0
      - OpenTelemetry__Jaeger__AgentHost=ecommerce.jaeger
      - OpenTelemetry__Jaeger__AgentPort=6831
      - OpenTelemetry__Jaeger__Endpoint=http://ecommerce.jaeger:14268/api/traces
      - OpenTelemetry__OTLP__Endpoint=http://ecommerce.jaeger:4317
    depends_on:
      - ecommerce.db
      - ecommerce.redis
      - ecommerce.seq
      - ecommerce.authserver
      - ecommerce.jaeger
      - ecommerce.otel-collector
    ports:
      - 4000:8080
    volumes:
      - keys:/root/.aspnet/DataProtection-Keys
    networks:
      - ecommerce-network
    develop:
      watch:
        - action: rebuild
          path: ./src/Presentation/ECommerce.WebAPI/
          target: /app
        - action: rebuild
          path: ./src/Core/
          target: /app
        - action: rebuild
          path: ./src/Application/
          target: /app

  ecommerce.authserver:
    container_name: ecommerce.authserver
    build:
      context: .
      dockerfile: src/Infrastructure/ECommerce.AuthServer/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=ecommerce.db;Database=ecommerce;Username=postgres;Password=postgres
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ASPNETCORE_HTTPS_PORT=8081
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/auth.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=YourSecurePassword
      - Authentication__UseHttps=true
      - Authentication__Authority=https://ecommerce.authserver:8081
      - Authentication__RequireHttpsMetadata=true
      - DOTNET_RUNNING_IN_CONTAINER=true
      - OpenTelemetry__ServiceName=ECommerce.AuthServer
      - OpenTelemetry__ServiceVersion=1.0.0
      - OpenTelemetry__Jaeger__AgentHost=ecommerce.jaeger
      - OpenTelemetry__Jaeger__AgentPort=6831
      - OpenTelemetry__Jaeger__Endpoint=http://ecommerce.jaeger:14268/api/traces
      - OpenTelemetry__OTLP__Endpoint=http://ecommerce.jaeger:4317
    depends_on:
      - ecommerce.db
    ports:
      - 5001:8080
      - 5002:8081
    volumes:
      - keys:/root/.aspnet/DataProtection-Keys
    networks:
      - ecommerce-network
    develop:
      watch:
        - action: rebuild
          path: ./src/Infrastructure/ECommerce.AuthServer/
          target: /app
        - action: rebuild
          path: ./src/Core/
          target: /app
        - action: rebuild
          path: ./src/Application/
          target: /app

  ecommerce.db:
    container_name: ecommerce.db
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: ecommerce
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  ecommerce.pgadmin:
    container_name: ecommerce.pgadmin
    image: dpage/pgadmin4
    ports:
      - 8082:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - ecommerce.db
    networks:
      - ecommerce-network
    volumes:
      - pgadmin:/var/lib/pgadmin

  ecommerce.redis:
    container_name: ecommerce.redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redisdata:/data
    networks:
      - ecommerce-network

  ecommerce.seq:
    container_name: ecommerce.seq
    image: datalust/seq
    ports:
      - 5341:80
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - seqdata:/data
    networks:
      - ecommerce-network

  ecommerce.jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: ecommerce.jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
      - "6831:6831/udp"
      - "4317:4317"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - ecommerce-network

  ecommerce.otel-collector:
    build:
      context: .
      dockerfile: Dockerfile.otel-collector
    container_name: ecommerce.otel-collector
    ports:
      - "4319:4317"
      - "4320:4318"
      - "8888:8888"
      - "8889:8889"
    depends_on:
      - ecommerce.jaeger
    networks:
      - ecommerce-network

volumes:
  pgdata:
  redisdata:
  seqdata:
  keys:
  pgadmin:

networks:
  ecommerce-network:
    driver: bridge
